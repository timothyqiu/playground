[gd_resource type="ShaderMaterial" load_steps=5 format=3 uid="uid://cxe3fhia043pb"]

[ext_resource type="Texture2D" uid="uid://bq8xf0xytx8ux" path="res://assets/foliage_foliage.png" id="2_1ta7l"]

[sub_resource type="Shader" id="Shader_xdhjn"]
code = "shader_type spatial;
render_mode cull_disabled, world_vertex_coords;

group_uniforms basics;
uniform sampler2D albedo: source_color, filter_nearest_mipmap;
uniform float alpha_cutoff = 0.5;

group_uniforms wind;
uniform sampler2D noise_tex;
uniform float wind_speed = .1;
uniform float wind_strength = .01;

void vertex() {
	float offset = TIME * wind_speed;
	float noise = texture(noise_tex, NODE_POSITION_WORLD.xz - offset).r;
	noise -= .5;
	noise *= wind_strength;
	VERTEX.x += noise * length(VERTEX.y - NODE_POSITION_WORLD.y);
}

void fragment() {
	vec4 color = texture(albedo, UV);
	if (color.a < alpha_cutoff) {
		discard;
	}
	ALBEDO = color.rgb;
}"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_hmjgi"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_otmtl"]
noise = SubResource("FastNoiseLite_hmjgi")

[resource]
render_priority = 0
shader = SubResource("Shader_xdhjn")
shader_parameter/alpha_cutoff = 0.5
shader_parameter/albedo = ExtResource("2_1ta7l")
shader_parameter/wind_speed = 0.1
shader_parameter/wind_strength = 0.2
shader_parameter/noise_tex = SubResource("NoiseTexture2D_otmtl")
