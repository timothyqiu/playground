[gd_scene load_steps=12 format=2]

[ext_resource path="res://UI/MainMenu.tscn" type="PackedScene" id=1]
[ext_resource path="res://Monitor.gd" type="Script" id=2]
[ext_resource path="res://World/8bit-OnTheOffensiveV2.ogg" type="AudioStream" id=3]

[sub_resource type="Shader" id=6]
code = "shader_type canvas_item;
render_mode unshaded;

uniform float cutoff: hint_range(0.0, 1.0) = 1.0;
uniform float smooth_size: hint_range(0.0, 1.0) = 0.5;
uniform sampler2D mask: hint_albedo;

void fragment() {
	float value = texture(mask, UV).r;
	float alpha = smoothstep(cutoff, cutoff + smooth_size, value * (1.0 - smooth_size) + smooth_size);
	COLOR = vec4(COLOR.rgb, alpha);
}"

[sub_resource type="Gradient" id=7]

[sub_resource type="GradientTexture" id=8]
gradient = SubResource( 7 )

[sub_resource type="ShaderMaterial" id=9]
shader = SubResource( 6 )
shader_param/cutoff = 0.0
shader_param/smooth_size = 0.05
shader_param/mask = SubResource( 8 )

[sub_resource type="Shader" id=5]
code = "shader_type canvas_item;
render_mode unshaded;

uniform vec2 curve_factor = vec2(8.0, 8.0);
uniform float zoom: hint_range(0.5, 2) = 1.05;
uniform float scanline_count: hint_range(0, 1080) = 50;

vec2 uv_curve(vec2 uv) {
	uv = (uv - 0.5) * 2.0;
	
	uv.x *= 1.0 + pow(abs(uv.y) / curve_factor.y, 2.0);
	uv.y *= 1.0 + pow(abs(uv.x) / curve_factor.x, 2.0);
	
	uv /= zoom;
	
	uv = (uv / 2.0) + 0.5;
	
	return uv;
}

void fragment() {
	float r = texture(SCREEN_TEXTURE, uv_curve(SCREEN_UV) + vec2(SCREEN_PIXEL_SIZE.x * 1.0, 0.0)).r;
	float g = texture(SCREEN_TEXTURE, uv_curve(SCREEN_UV) + vec2(SCREEN_PIXEL_SIZE.x * 0.0, 0.0)).g;
	float b = texture(SCREEN_TEXTURE, uv_curve(SCREEN_UV) + vec2(SCREEN_PIXEL_SIZE.x *-1.0, 0.0)).b;
	
	float s = sin(uv_curve(SCREEN_UV).y * scanline_count * 2.0);
	s = (s * 0.5 + 0.5) * 0.9 + 0.1;
	
	vec4 scanline = vec4(vec3(pow(s, 0.25)), 1.0);
	
	COLOR = vec4(r, g, b, 1.0) * scanline;
}"

[sub_resource type="ShaderMaterial" id=10]
shader = SubResource( 5 )
shader_param/curve_factor = Vector2( 8, 8 )
shader_param/zoom = 1.04
shader_param/scanline_count = 720.0

[sub_resource type="Animation" id=11]
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath("Transition:material:shader_param/cutoff")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1.5, 1 ),
"update": 0,
"values": [ 0.0, 1.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("../AudioStreamPlayer2D:volume_db")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 0.5, 1 ),
"update": 0,
"values": [ -20.0, 0.0 ]
}

[sub_resource type="Animation" id=12]
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath("Transition:material:shader_param/cutoff")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1.5, 1 ),
"update": 0,
"values": [ 1.0, 0.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("../AudioStreamPlayer2D:volume_db")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1.5, 1 ),
"update": 0,
"values": [ 0.0, -20.0 ]
}

[node name="Monitor" type="Node2D"]
script = ExtResource( 2 )

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="Transition" type="ColorRect" parent="CanvasLayer"]
material = SubResource( 9 )
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
color = Color( 0, 0, 0, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CRTEffect" type="ColorRect" parent="CanvasLayer"]
material = SubResource( 10 )
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
color = Color( 0, 0, 0, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="AnimationPlayer" type="AnimationPlayer" parent="CanvasLayer"]
autoplay = "TransitionIn"
anims/TransitionIn = SubResource( 11 )
anims/TransitionOut = SubResource( 12 )

[node name="MainMenu" parent="." instance=ExtResource( 1 )]

[node name="AudioStreamPlayer2D" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource( 3 )
volume_db = -20.0
autoplay = true
[connection signal="game_start" from="MainMenu" to="." method="on_game_start" flags=3]
